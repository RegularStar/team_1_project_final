name: Django CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: skillbridge
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      SECRET_KEY: dummy-secret-key
      GPT_KEY: dummy-gpt-key
      GPT_MODEL: gpt-4o-mini
      DB_NAME: skillbridge
      DB_USER: root
      DB_PASSWORD: root
      DB_HOST: 127.0.0.1
      DB_PORT: "3306"
      TZ: Asia/Seoul

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y default-libmysqlclient-dev build-essential pkg-config

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run migrations
        run: python manage.py migrate --noinput

      - name: Run tests
        run: python manage.py test

  build-and-push:
    needs: tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
    outputs:
      image: ${{ steps.meta.outputs.image }}

    steps:
      - uses: actions/checkout@v4

      - name: Prepare image meta
        id: meta
        run: |
          IMAGE_NAME=${GITHUB_REPOSITORY,,}
          IMAGE_URI=${REGISTRY}/${IMAGE_NAME}:${GITHUB_SHA}
          echo "image=${IMAGE_URI}" >> "$GITHUB_OUTPUT"
          echo "IMAGE_NAME=$IMAGE_NAME" >> "$GITHUB_ENV"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.image }}

      - name: Published image
        run: echo "Pushed ${{ steps.meta.outputs.image }}"

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read

    steps:
      - name: EC2에 배포
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_SSH_PORT || '22' }}
          script_stop: true
          script: |
            set -e
            IMAGE="${{ needs.build-and-push.outputs.image }}"
            CONTAINER_NAME=skillbridge
            echo "이미지 Pull: $IMAGE"
            docker pull "$IMAGE"
            echo "기존 컨테이너 중지"
            docker stop "$CONTAINER_NAME" 2>/dev/null || true
            docker rm "$CONTAINER_NAME" 2>/dev/null || true
            echo "새 컨테이너 실행"
            docker run -d \
              --name "$CONTAINER_NAME" \
              --restart always \
              --env-file /opt/skillbridge/.env \
              -p 8000:8000 \
              "$IMAGE"
